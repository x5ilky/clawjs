impl Sprite {
    fn on_flag(spr: Self, l: label) void {
        // | { type: "Flag"; target: string; label: string }
        js := $.create_js_object()
        js:set("type", "Flag")
        js:set("target", spr.id)
        js:set("label", $.label_get_name(l))
        $.label_push_object(stat_label, js)
        $.set_label(l)
    }
}

impl<T + Runtime, U + Runtime> Add<U, JsObject> for T {
    fn add(left: T, right: U) JsObject {
        js := $.create_js_object()
        // | { key: "BinaryOperation", oper: BinaryOperation, left: IlValue, right: IlValue }
        js:set("key", "BinaryOperation")
        js:set("oper", "Add")
        js:set("left", left:to_scratch_value())
        js:set("right", right:to_scratch_value())

        return js
    }
}

export fn goto<T + Runtime, U + Runtime>(x: T, y: U) void {
    js := $.create_js_object()
    // | { type: "GotoXY"; x: IlValue; y: IlValue }
    js:set("type", "GotoXY")
    js:set("x", x:to_scratch_value())
    js:set("y", y:to_scratch_value())
    $.label_push_object($scope, js)
}